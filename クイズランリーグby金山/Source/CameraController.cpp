#include"CameraController.h"
#include"Camera.h"
#include"Input/Input.h"

//更新処理
void CameraController::Update(float elapsendTime)
{
    GamePad& gamepad = Input::Instance().GetGamePad();
    float ax = gamepad.GetAxisRX();
    float ay = gamepad.GetAxisRY();
    //カメラの回転速度
    float speed = rollSpeed * elapsendTime;


#if false
    //スティックの入力値に合わせてX軸とY軸を回転
    angle.x += ay * speed;
    angle.y += ax * speed;

    //X軸のカメラ回転を制限
    if (angle.y > maxAngleX) angle.y = maxAngleX;
    if (angle.y < minAngleX)angle.y = minAngleX;

    //Y軸の回転値を−3.14〜3.14に収まるようにする
    if (angle.y < -DirectX::XM_PI)angle.y += DirectX::XM_2PI;
    if (angle.y > DirectX::XM_PI)angle.y -= DirectX::XM_2PI;
#endif

    //カメラ回転値を回転行列に変換
    DirectX::XMMATRIX Tranceform = DirectX::XMMatrixRotationRollPitchYaw(angle.y, angle.x, angle.z);

    //回転行列から前方向ベクトルを取り出す
    DirectX::XMVECTOR Front = Tranceform.r[2];
    DirectX::XMFLOAT3 front;
    DirectX::XMStoreFloat3(&front, Front);

    //注視点から後ろベクトル方向に一定距離離れたカメラ視点を求める
    DirectX::XMFLOAT3 eye;

    //＋にするとカメラを前からとることができる
    eye.x = target.x - front.x * range;
    eye.y = cameraPositionY;
    eye.z = target.z - front.z * range;

        //カメラの視点と注視点を設定
        Camera::Incetance().SetLookAT(eye, target, DirectX::XMFLOAT3(0, 1, 0));
}